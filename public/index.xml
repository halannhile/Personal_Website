<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kevin Zolea on Kevin Zolea</title>
    <link>/</link>
    <description>Recent content in Kevin Zolea on Kevin Zolea</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy;2019 Kevin Zolea</copyright>
    <lastBuildDate>Wed, 27 Mar 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tips For Customizing Your R Leaflet Map</title>
      <link>/post/r-leaflet/tips-for-customizing-your-r-leaflet-map/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/r-leaflet/tips-for-customizing-your-r-leaflet-map/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leaflet/leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leafletfix/leafletfix.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4-compressed.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/rstudio_leaflet/rstudio_leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet-binding/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leaflet-easybutton/easy-button.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet-easybutton/easy-button.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet-easybutton/EasyButton-binding.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/ionicons/ionicons.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;/rmarkdown-libs/lfx-gps/lfx-gps-prod.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/lfx-gps/lfx-gps-prod.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/lfx-gps/lfx-gps-bindings.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/lfx-draw/lfx-draw-prod.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/lfx-draw/lfx-draw-prod.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/lfx-draw/lfx-draw-bindings.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/lfx-draw-drag/lfx-draw-drag-prod.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/lfx-styleeditor/lfx-styleeditor-prod.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/lfx-styleeditor/lfx-styleeditor-prod.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/lfx-styleeditor/lfx-styleeditor-bindings.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;overview&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Maps are apart of our everyday lifes. They can be seen in almost every industry and are useful for numerous different purposes. A lot of the time these maps are static. Sometimes, however, it’s extremely useful to interact with the data on the map. This is where the &lt;a href=&#34;https://cran.r-project.org/web/packages/leaflet/leaflet.pdf&#34; target=&#34;_blank&#34;&gt;Leaflet&lt;/a&gt; package comes in. This post will go over what the &lt;code&gt;Leaflet&lt;/code&gt; package is and provide some useful tips on how to make your new interactive map shine.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;what-is-leaflet&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What is &lt;code&gt;Leaflet&lt;/code&gt; ?&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Leaflet&lt;/code&gt; is an open-source &lt;code&gt;JavaScript&lt;/code&gt; library for mobile-friendly interactive maps. It’s used by a great deal of websites and GIS specialists all over the world! The great thing about &lt;code&gt;Leaflet&lt;/code&gt; is that it’s super easy to learn and there’s so many tutorials out there to help you. Luckily, instead of having to learn &lt;code&gt;JavaScript&lt;/code&gt; theres’s an R &lt;code&gt;Leaflet&lt;/code&gt; package. This R package makes it extremely easy to integrate and control &lt;code&gt;Leaflet&lt;/code&gt; maps in R.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prerequisites&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Prerequisites:&lt;/h3&gt;
&lt;p&gt;Before we jump head first into some of tips, I believe it’s necessary for you to go over some material on the &lt;code&gt;Leaflet&lt;/code&gt; package in R. This post assumes you know the basics of &lt;code&gt;Leaflet&lt;/code&gt; but just in case someone got here and has no clue what I am talking about here are some resources I found helpful when I first started using the package.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://rstudio.github.io/leaflet/&#34; target=&#34;_blank&#34;&gt;Leaflet for R - Introduction&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.earthdatascience.org/courses/earth-analytics/get-data-using-apis/leaflet-r/&#34; target=&#34;_blank&#34;&gt;Creating Interactive Spatial Maps in R Using Leaflet&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.datascience.com/blog/beginners-guide-to-shiny-and-leaflet-for-interactive-mapping&#34; target=&#34;_blank&#34;&gt;A Beginner’s Exploration of Shiny and Leaflet for Interactive Mapping&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=vl9D3uTk36k&amp;amp;list=PLmFi_ou2WwcEyPq7Y9DvzFRLlp9-XvFDb&#34; target=&#34;_blank&#34;&gt;Leaflet Mapping in Rstudio - Introduction&lt;/a&gt; (Series of videos)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;tip-1-use-the-leaflet.extras-package-to-add-extra-functionality-to-your-map&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Tip #1: Use the &lt;code&gt;leaflet.extras&lt;/code&gt; package to add extra functionality to your map&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/bhaskarvk/leaflet.extras&#34;&gt;&lt;code&gt;leaflet.extras&lt;/code&gt;&lt;/a&gt; package is a great tool to add some cool features to your map using various &lt;a href=&#34;https://leafletjs.com/plugins&#34;&gt;Leaflet plugins&lt;/a&gt; (&lt;strong&gt;Note: Not all the plugins are integrated&lt;/strong&gt;). I wont go over all the various plugins,instead, I will show you the functions I use and find most useful.&lt;/p&gt;
&lt;div id=&#34;reset-maps-view-to-original-view&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Reset map’s view to original view&lt;/h4&gt;
&lt;p&gt;Resetting your map’s view to it’s original view is very simple. It can be done with one function: &lt;code&gt;addResetMapButton&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(leaflet)
library(leaflet.extras)

leaflet(options = leafletOptions(minZoom = 7))%&amp;gt;%
  addTiles()%&amp;gt;%
  addResetMapButton()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addEasyButton&#34;,&#34;args&#34;:[{&#34;icon&#34;:&#34;ion-arrow-shrink&#34;,&#34;title&#34;:&#34;Reset View&#34;,&#34;onClick&#34;:&#34;function(btn, map){ map.setView(map._initialCenter, map._initialZoom); }&#34;,&#34;position&#34;:&#34;topleft&#34;}]}]},&#34;evals&#34;:[&#34;calls.1.args.0.onClick&#34;],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el, x, data) {\n  return (function(el, x){ var map = this; map._initialCenter = map.getCenter(); map._initialZoom = map.getZoom();}).call(this.getMap(), el, x, data);\n}&#34;,&#34;data&#34;:null}]}}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-gps-location-note-open-the-map-in-a-browser-not-inside-rstudio-allow-the-request-for-location-access&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Adding GPS location (&lt;strong&gt;Note: Open the map in a browser not inside Rstudio! Allow the request for location access&lt;/strong&gt;)&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;library(leaflet)
library(leaflet.extras)

map &amp;lt;- leaflet() %&amp;gt;% addTiles()

map &amp;lt;- addControlGPS(map, options = gpsOptions(position = &amp;quot;topleft&amp;quot;, activate = TRUE, 
                                               autoCenter = TRUE, maxZoom = 10, 
                                               setView = TRUE))
activateGPS(map)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addControlGPS&#34;,&#34;args&#34;:[{&#34;position&#34;:&#34;topleft&#34;,&#34;activate&#34;:true,&#34;autoCenter&#34;:true,&#34;maxZoom&#34;:10,&#34;setView&#34;:true}]},{&#34;method&#34;:&#34;activateGPS&#34;,&#34;args&#34;:[]}]},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;draw-features-on-leaflet-map-and-have-ability-to-style&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Draw features on Leaflet map and have ability to style&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;library(leaflet)
library(leaflet.extras)

leaflet() %&amp;gt;%
  setView(lng = -74.4 ,lat =40, zoom = 8)%&amp;gt;%
  addTiles() %&amp;gt;%
  addDrawToolbar(
    targetGroup=&amp;#39;draw&amp;#39;,
    editOptions = editToolbarOptions(selectedPathOptions = selectedPathOptions()))  %&amp;gt;%
  addLayersControl(overlayGroups = c(&amp;#39;draw&amp;#39;), options =
                     layersControlOptions(collapsed=FALSE)) %&amp;gt;%
  addStyleEditor()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;setView&#34;:[[40,-74.4],8,[]],&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addDrawToolbar&#34;,&#34;args&#34;:[null,&#34;draw&#34;,{&#34;position&#34;:&#34;topleft&#34;,&#34;draw&#34;:{&#34;polyline&#34;:{&#34;allowIntersection&#34;:true,&#34;drawError&#34;:{&#34;color&#34;:&#34;#b00b00&#34;,&#34;timeout&#34;:2500},&#34;guidelineDistance&#34;:20,&#34;maxGuideLineLength&#34;:4000,&#34;showLength&#34;:true,&#34;metric&#34;:true,&#34;feet&#34;:true,&#34;nautic&#34;:false,&#34;zIndexOffset&#34;:2000,&#34;shapeOptions&#34;:{&#34;stroke&#34;:true,&#34;color&#34;:&#34;#03f&#34;,&#34;weight&#34;:1,&#34;opacity&#34;:1,&#34;fill&#34;:false,&#34;fillColor&#34;:&#34;#03f&#34;,&#34;fillOpacity&#34;:0.4,&#34;clickable&#34;:true,&#34;smoothFactor&#34;:1,&#34;noClip&#34;:true},&#34;repeatMode&#34;:false},&#34;polygon&#34;:{&#34;showArea&#34;:false,&#34;metric&#34;:true,&#34;shapeOptions&#34;:{&#34;stroke&#34;:true,&#34;color&#34;:&#34;#03f&#34;,&#34;weight&#34;:1,&#34;opacity&#34;:1,&#34;fill&#34;:true,&#34;fillColor&#34;:&#34;#03f&#34;,&#34;fillOpacity&#34;:0.4,&#34;clickable&#34;:true,&#34;smoothFactor&#34;:1,&#34;noClip&#34;:true},&#34;repeatMode&#34;:false},&#34;circle&#34;:{&#34;shapeOptions&#34;:{&#34;stroke&#34;:true,&#34;color&#34;:&#34;#03f&#34;,&#34;weight&#34;:1,&#34;opacity&#34;:1,&#34;fill&#34;:true,&#34;fillColor&#34;:&#34;#03f&#34;,&#34;fillOpacity&#34;:0.4,&#34;clickable&#34;:true,&#34;smoothFactor&#34;:1,&#34;noClip&#34;:true},&#34;repeatMode&#34;:false,&#34;showRadius&#34;:true,&#34;metric&#34;:true,&#34;feet&#34;:true,&#34;nautic&#34;:false},&#34;rectangle&#34;:{&#34;showArea&#34;:true,&#34;metric&#34;:true,&#34;shapeOptions&#34;:{&#34;stroke&#34;:true,&#34;color&#34;:&#34;#03f&#34;,&#34;weight&#34;:1,&#34;opacity&#34;:1,&#34;fill&#34;:true,&#34;fillColor&#34;:&#34;#03f&#34;,&#34;fillOpacity&#34;:0.4,&#34;clickable&#34;:true,&#34;smoothFactor&#34;:1,&#34;noClip&#34;:true},&#34;repeatMode&#34;:false},&#34;marker&#34;:{&#34;zIndexOffset&#34;:2000,&#34;repeatMode&#34;:false},&#34;circlemarker&#34;:{&#34;stroke&#34;:true,&#34;color&#34;:&#34;#3388ff&#34;,&#34;weight&#34;:4,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillOpacity&#34;:0.2,&#34;clickable&#34;:true,&#34;zIndexOffset&#34;:2000,&#34;repeatMode&#34;:false},&#34;singleFeature&#34;:false},&#34;edit&#34;:{&#34;edit&#34;:true,&#34;remove&#34;:true,&#34;selectedPathOptions&#34;:{&#34;dashArray&#34;:&#34;10, 10&#34;,&#34;weight&#34;:2,&#34;color&#34;:&#34;black&#34;,&#34;fill&#34;:true,&#34;fillColor&#34;:&#34;black&#34;,&#34;fillOpacity&#34;:0.6,&#34;maintainColor&#34;:false},&#34;allowIntersection&#34;:true}}]},{&#34;method&#34;:&#34;addLayersControl&#34;,&#34;args&#34;:[[],&#34;draw&#34;,{&#34;collapsed&#34;:false,&#34;autoZIndex&#34;:true,&#34;position&#34;:&#34;topright&#34;}]},{&#34;method&#34;:&#34;addStyleEditor&#34;,&#34;args&#34;:[{&#34;position&#34;:&#34;topleft&#34;,&#34;openOnLeafletDraw&#34;:true,&#34;useGrouping&#34;:false}]}]},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
     A very interesting post on using the &lt;code&gt;addDrawToolbar()&lt;/code&gt; function to select multiple locations on your leaflet map in shiny can be seen here &lt;a href=&#34;https://redoakstrategic.com/geoshaper/&#34; target=&#34;_blank&#34;&gt;Selecting Multiple Locations on a Leaflet Map in R Shiny&lt;/a&gt;. Check it out! 
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tip-2-have-map-zoom-into-polygon-once-polygon-is-clicked-in-shiny&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Tip #2: Have map zoom into polygon once polygon is clicked in shiny&lt;/h3&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;embed src=&#34;/img/leaflet_zoom.mp4&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Using the USGS dataRetrieval package to analyze continuous water quality data</title>
      <link>/post/using-the-usgs-dataretrieval-package-to-analyze-water-quality-trends/</link>
      <pubDate>Sat, 16 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/using-the-usgs-dataretrieval-package-to-analyze-water-quality-trends/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;Being that I work for the &lt;a href=&#34;https://www.nj.gov/dep/wms/&#34; target=&#34;_blank&#34;&gt;Division of Water Monitoring &amp;amp; Standards&lt;/a&gt;, I have to analyze a lot of water quality data. A majority of the data is in house from the samples we collect but most times I have to download data from online sources. These online sources usually consist of the same organizations and most have a pretty straight forward way of getting access to the data. However, the process of going to that organization’s website and getting whatever data you need is a bit time consuming. I always look for ways that I can automate a task and not have to do the same things over and over again. It wasn’t until recently that I learned about the &lt;a href=&#34;https://cran.r-project.org/web/packages/dataRetrieval/dataRetrieval.pdf&#34; target=&#34;_blank&#34;&gt;dataRetrieval&lt;/a&gt; package, which can do exactly that.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;what-is-the-dataretrieval-package-how-does-it-work&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What is the &lt;code&gt;dataRetrieval&lt;/code&gt; package &amp;amp; how does it work?&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;dataRetrieval&lt;/code&gt; package is a collection of functions to help retrieve U.S. Geological Survey (&lt;a href=&#34;https://www.usgs.gov&#34; target=&#34;_blank&#34;&gt;USGS&lt;/a&gt;) and U.S. Environmental Protection Agency (&lt;a href=&#34;https://www.epa.gov&#34; target=&#34;_blank&#34;&gt;EPA&lt;/a&gt;) water quality and hydrology data from web services. With the dataRetrieval package you can discover, access, retrieve, and parse water data. The data comes from numerous different sources. The image below provides a nice overview of the different sources, data types, metadata, time series type, formats, and output.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/data_source_example.png&#34; alt=&#34;Image Credit: USGS&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Image Credit: USGS&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I’m not going to go into all the different functions and usage of the &lt;code&gt;dataRetrieval&lt;/code&gt; package but if you would like to learn more here are some of the sources I found the most useful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/dataRetrieval/vignettes/dataRetrieval.html#usgs-web-retrievals&#34; target=&#34;_blank&#34;&gt;Introduction to the dataRetrieval package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://acwi.gov/monitoring/conference/2016/0_monday_may2/A1B1/dataRetrieval%20Tutorial_secure.pdf&#34; target=&#34;_blank&#34;&gt;dataRetrieval Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pubs.usgs.gov/tm/04/a10/pdf/tm4A10.pdf&#34; target=&#34;_blank&#34;&gt;USGS PDF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;what-i-will-show-in-this-blog-post&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What I will show in this blog post&lt;/h3&gt;
&lt;p&gt;In this blog post I will discuss the usage of the &lt;code&gt;readNWISuv()&lt;/code&gt; function and how to create a nice plot with the &lt;code&gt;ggplot2&lt;/code&gt; package. The &lt;code&gt;readNWISuv()&lt;/code&gt; function imports data from the &lt;a href=&#34;https://waterdata.usgs.gov/nwis&#34; target=&#34;_blank&#34;&gt;NWIS&lt;/a&gt; web service. Specifically, this function retrieves instantaneous water quality data. In order to use this function you must have the following arguments:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;readNWISuv(siteNumbers, parameterCd, startDate = &amp;quot;&amp;quot;, endDate = &amp;quot;&amp;quot;,tz = &amp;quot;UTC&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;siteNumbers&lt;/code&gt;: A character vector of USGS site numbers (or multiple sites). This is usually an 8 digit number. You can use this &lt;a href=&#34;https://maps.waterdata.usgs.gov/mapper/index.html&#34; target=&#34;_blank&#34;&gt;map&lt;/a&gt; to find a site your interested in.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parameterCd&lt;/code&gt;: Character USGS parameter code.This is usually an 5 digit number. To find a parameter code of interest you can type in &lt;code&gt;parameterCdFile&lt;/code&gt;. This allows you to explore the USGS parameter codes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;startDate&lt;/code&gt;: character starting date for data retrieval in the form YYYY-MM-DD.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;endDate&lt;/code&gt;: character ending date for data retrieval in the form YYYY-MM-DD.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tz&lt;/code&gt;: character to set timezone attribute of dateTime. Default is “UTC”, and converts the date times to UTC. There are numerous different possible values to use. For example, if you wanted it to be in Eastern Standard Time, you would use &lt;code&gt;&amp;quot;America/New_York&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;install-and-load-dataretrieval-package-from-cran&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Install and load &lt;code&gt;dataRetrieval&lt;/code&gt; package from cran&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;install.packages(&amp;quot;dataRetrieval&amp;quot;)      library(dataRetrieval)&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pull-data-with-the-readnwisuv-function&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pull data with the &lt;code&gt;readNWISuv()&lt;/code&gt; function&lt;/h3&gt;
&lt;p&gt;For my analysis I am going to pull continuous specific conductance (SC) data for a site of intereset in NJ. With this specific conductance data, I will calculate Total dissolved solids (TDS). I will do this by using an equation from a correlation I made between SC &amp;amp; TDS. Being that this isn’t the focus of the post, I will not go in detail about this. However, in a subsequent post I will explain how I did this.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;USGS_continuous_sc_data&amp;lt;-readNWISuv(&amp;quot;01408029&amp;quot;,&amp;quot;00095&amp;quot;,tz = &amp;quot;America/New_York&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For simplicity, I am only looking up one site and one type of parameter. You can look up multiple sites and parameters in one pull. Now lets take a look at a preview of the pull we just made.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##   agency_cd  site_no            dateTime X_00095_00000 X_00095_00000_cd
## 1      USGS 01408029 2007-10-01 01:00:00           246                A
## 2      USGS 01408029 2007-10-01 01:15:00           246                A
## 3      USGS 01408029 2007-10-01 01:30:00           246                A
## 4      USGS 01408029 2007-10-01 01:45:00           246                A
## 5      USGS 01408029 2007-10-01 02:00:00           246                A
## 6      USGS 01408029 2007-10-01 02:15:00           246                A
##              tz_cd
## 1 America/New_York
## 2 America/New_York
## 3 America/New_York
## 4 America/New_York
## 5 America/New_York
## 6 America/New_York&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The names of the columns in the dataframe can be described as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;agency_cd&lt;/code&gt;: The NWIS code for the agency reporting the data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;site_no&lt;/code&gt;: The USGS site number&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;dateTime&lt;/code&gt;: The date and time of the value converted to UTC&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;X_00095_00000&lt;/code&gt;: The values of the parameter we gave to the function.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;X_00095_00000_cd&lt;/code&gt;: The statistic code&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tz_cd&lt;/code&gt;: The time zone code for dateTime&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can clean up the names with the &lt;code&gt;reenameNWISColumns()&lt;/code&gt; function if you’d like.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;we-have-the-data-now-what&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;We have the data… now what?&lt;/h3&gt;
&lt;p&gt;Now that we have retrieved the data, we can now start manipulating it and create a plot. We will create the plot using the &lt;code&gt;ggplot2&lt;/code&gt; package. I mentioned before that I was going to calculate TDS. Just to give some background… the reason I am doing this is because of a project I am working on that deals with roadsalt. I figured I would include it in this post just to show that you have a great deal of options in R. I will discuss my roadsalt research in more detail in later posts!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;what-is-the-ggplot2-package&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What is the ggplot2 package?&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.rdocumentation.org/packages/ggplot2/versions/3.1.0&#34; target=&#34;_blank&#34;&gt;ggplot2&lt;/a&gt; package is a system for ‘declaratively’ creating graphics, based on “The Grammar of Graphics”. It is a great way to visualize the data you are analyzing. With ggplot2, you have a lot of flexibility with the amount of customization you can give your plot. In my opinion, I think it is very easy to learn and it produces beautiful high quality plots. To learn more about ggplot2, I recommend &lt;a href=&#34;http://r-statistics.co/Complete-Ggplot2-Tutorial-Part1-With-R-Code.html&#34; target=&#34;_blank&#34;&gt;The Complete ggplot2 Tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;full-code-used-to-create-plot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Full code used to create plot:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;library(dataRetrieval)
library(ggplot2)
library(dplyr)
library(plyr)

### Vector of sites with continuous specific conductance data ###
siteNumber&amp;lt;-c(&amp;quot;01408029&amp;quot;)

### Parameter code for specific conductance ###
parameterCd&amp;lt;-&amp;quot;00095&amp;quot;

### Function that retrieves near real time continuous data for specific sites and parameters ###
USGS_continuous_sc_data&amp;lt;-readNWISuv(siteNumber,parameterCd,tz = &amp;quot;America/New_York&amp;quot;)

### Filter dataframe ###
USGS_continuous_sc_data&amp;lt;-USGS_continuous_sc_data%&amp;gt;%
  dplyr::select(site_no,dateTime,X_00095_00000)%&amp;gt;%
  dplyr::rename(Site = site_no,Specific_conductance = X_00095_00000)
  
### Calculate TDS based on continuous Specific Conductance data and eq from correlation plots ###
final_USGS_data_TDS&amp;lt;-USGS_continuous_sc_data%&amp;gt;%
  dplyr::mutate(Calculated_TDS = Specific_conductance * 0.572 +6.19)

### theme for plots ###
graph_theme_T&amp;lt;- theme_linedraw()+
  theme(plot.title=element_text(size=15, face=&amp;quot;bold&amp;quot;,vjust=0.5,hjust = 0.5),
        plot.subtitle = element_text(size=15, face=&amp;quot;bold&amp;quot;,vjust=0.5,hjust = 0.5),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        plot.background = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1.5,2,4,2), &amp;quot;lines&amp;quot;), 
        legend.position = &amp;quot;bottom&amp;quot;,
        legend.background = element_blank(),
        legend.text=element_text(size=10, face=&amp;quot;bold&amp;quot;))
        
### Make plot of data ###
      
p&amp;lt;-ggplot(final_USGS_data_TDS, aes(x=dateTime,y=Calculated_TDS)) +
  geom_line(aes(color = &amp;quot;USGS Continuous Data&amp;quot;),
    stat = &amp;quot;identity&amp;quot;,size=1.3)+
  scale_y_continuous(expand = c(0, 0), limits = c(0, max(final_USGS_data_TDS$Calculated_TDS)))+
  ggtitle(&amp;quot;Total Dissolved Solids (TDS) Concentration (mg/L)&amp;quot;) +
  labs(subtitle =paste(&amp;quot;USGS Site:&amp;quot;,final_USGS_data_TDS$Site,sep = &amp;#39;&amp;#39;))+
  xlab(&amp;quot;Year&amp;quot;) + ylab(&amp;quot;TDS Concentration (mg/L)&amp;quot;) +
  geom_hline(aes(yintercept = 500,color=&amp;quot;Freshwater Aquatic Life Criteria for TDS = 500 mg/L&amp;quot;),size=1.3,alpha=0.6)+
  scale_color_manual(&amp;quot;&amp;quot;,
                     values = c(&amp;quot;USGS Continuous Data&amp;quot;=&amp;quot;#037907&amp;quot;,
                                &amp;quot;Freshwater Aquatic Life Criteria for TDS = 500 mg/L&amp;quot;=&amp;quot;red&amp;quot;))+
  
  graph_theme_T 

p
  &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;final-product&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Final Product:&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/post/USGS/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;what-is-this-plot-showing&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What is this plot showing?&lt;/h3&gt;
&lt;p&gt;This plot is showing the calculated TDS concentration for the selected site from 2007- present day. The red line indicates the Freshwater Aquatic Life Criteria for TDS. In the most simpliest terms, when the graph shows the TDS concentration (green line) going over the red line, TDS is over the standard.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;As you can see, the &lt;code&gt;dataRetrieval&lt;/code&gt; package is a very useful tool for water quality analysis. There is sooo much data you can obtain with just the ease of writing a few lines of code! I only touched base on &lt;strong&gt;1&lt;/strong&gt; function! There are so many different functions you can use to gain access to all different types of water quality data. Definitly look over the resources I included in the beginning if you want to learn more. I know this post was very basic but I hope it has helped you in some way. If you have any questions feel free to reach out to me!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Creating a website with the academic theme in blogdown</title>
      <link>/post/creating-a-website-with-the-academic-theme-in-blogdown/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/creating-a-website-with-the-academic-theme-in-blogdown/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introduction:&lt;/h3&gt;
&lt;p&gt;I have been told by a countless number of people that creating a personal website is a great way to showcase your skills and tell your story. I have been contemplating this for some time but kept procrastinating. The two biggest excuses I kept telling myself was that it would be too difficult &amp;amp; it would cost money. Boy was I wrong! It wasn’t until I started using R this past year that I realized how wrong I was. After a quick google search I came across the &lt;a href=&#34;https://cran.r-project.org/web/packages/blogdown/blogdown.pdf&#34; target=&#34;_blank&#34;&gt;blogdown&lt;/a&gt; package. &lt;code&gt;Blogdown&lt;/code&gt; is an amazing package in which you can create blogs and websites with &lt;a href=&#34;https://rmarkdown.rstudio.com/&#34; target=&#34;_blank&#34;&gt;R Markdown&lt;/a&gt;. Now I’m not saying that this stuff is extremely easy but if someone like myself(absolutely no website development knowledge) can do it, &lt;strong&gt;YOU CAN TOO!&lt;/strong&gt; This blog post isn’t a sure fire way to do it but more of an overview of how I did it. I would also like to point out that this is a &lt;strong&gt;very basic introduction &lt;/strong&gt; to creating a blog/website with blogdown. The amount of things you can do with this package is almost endless.. especially if you have an understanding of CSS, HTML, and Javascript.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://media.giphy.com/media/Rl9Yqavfj2Ula/giphy.gif&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;prerequisites&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Prerequisites:&lt;/h3&gt;
&lt;p&gt;Before you jump right in I recommend reading some online material and watching some youtube videos. Here is a list of the resources that helped me a lot.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34;&gt;blogdown: Creating Websites with R Markdown&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://alison.rbind.io/post/up-and-running-with-blogdown/&#34; target=&#34;_blank&#34;&gt;Up and Running with Blogdown&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=syWAKaj-4ck&amp;amp;t=649s&#34; target=&#34;_blank&#34;&gt;Making a Website with Blogdown&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34;&gt;Academic Theme Documentation&lt;/a&gt; (if your going to use the academic theme)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://amber.rbind.io/blog/2016/12/19/creatingsite/&#34; target=&#34;_blank&#34;&gt;Making a Website Using Blogdown, Hugo, and GitHub pages&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you review the above material you should have a pretty firm grasp on how to get the ball rolling. One of the biggest hurdles I had was creating my site with the Hugo Academic Theme. It wasn’t until I found this &lt;a href=&#34;https://stackoverflow.com/questions/54300535/unable-to-create-new-site-using-hugo-academic-theme&#34;&gt;post&lt;/a&gt; on stackoverflow that I was able to figure out what the problem was. There was a breaking change in the hugo-academic theme, so I had to download the development version of &lt;code&gt;blogdown&lt;/code&gt;. Not sure if this is still a thing but if you have the same problem definitly check out that post! The last piece of advice I will give before we get started is to make sure you check what the minimum hugo verision is for the theme you want to use. You can do this by going to the &lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34;&gt;hugo website&lt;/a&gt;. Pick the theme you want to use and look at the line that says &lt;code&gt;Minimum Hugo Verision:&lt;/code&gt; You can check what verision of hugo you have by using &lt;code&gt;hugo_version()&lt;/code&gt; in R. Now lets get started!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-a-repository-and-cloning-it&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Creating a Repository and Cloning it&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;I am going to assume you have used &lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt; before, but if you haven’t, that is completely fine. You can check out this &lt;a href=&#34;https://guides.github.com/&#34; target=&#34;_blank&#34;&gt;site&lt;/a&gt; to get a better understanding. Once you have a good understanding of GitHub and have an account created, you need to create a new repository. You can name this repository anything you want but it’s usually best practice to give it a meaningful name.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/screenshot1.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;Once you click create repository you should be on your repository page.&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Now you have to create a local copy of your repository or in other words “clone it”. To do this click the green “Clone or Download” button on the right hand side and copy the url displayed.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/screenshot2.png&#34; /&gt;

&lt;/div&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;So in order to “clone” the repo with the url that you just copied, you’re going to have to use git. If you don’t know anything about git, I recommend reading &lt;a href=&#34;https://happygitwithr.com/&#34; target=&#34;_blank&#34;&gt;Happy Git and GitHub for the useR&lt;/a&gt;. Now you can do this in numerous different ways. You can open &lt;a href=&#34;https://macpaw.com/how-to/use-terminal-on-mac&#34;&gt;Terminal&lt;/a&gt; if you’re on a Mac, if you’re on windows you can open &lt;a href=&#34;https://gitforwindows.org/&#34; target=&#34;_blank&#34;&gt;Git Bash&lt;/a&gt; or you can use the Terminal in Rstudio. Personally, I like to use Rstudio. So if you’re in Rstudio you have to make sure that you navigate to your working directory. You can see your working directory by typing &lt;code&gt;pwd&lt;/code&gt; and to change directories use &lt;code&gt;cd&lt;/code&gt;. Type &lt;code&gt;git clone&lt;/code&gt; and then paste the URL that you copied before.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The command should look like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/zoleak/Personal_Website.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If all went well then you should see a folder with the files in your repo in the directory that you chose.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/folder_stuff.png&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-started-with-the-blogdown-package-in-rstudio&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Getting started with the blogdown package in Rstudio&lt;/h3&gt;
&lt;p&gt;The time has finally come to start creating the site.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Open Rstudio and install &lt;code&gt;blogdown&lt;/code&gt;. I recommend installing the development version, which can be done like this:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;remotes::install_github(&#39;rstudio/blogdown&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Since &lt;code&gt;blogdown&lt;/code&gt; is based on the static site generator Hugo, you need to install Hugo. You can easily do this by using a function in &lt;code&gt;blogdown&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;install_hugo()&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Use the top menu buttons in Rstudio to browse to the directory on your computer where your GitHub repo is.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;File-&amp;gt;New Project-&amp;gt;Existing Directory&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Pick the theme you want to use. There are numerous different themes to pick from. I used the academic theme so I will use this one for the example. To browse themes &lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34;&gt;click here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create site using the &lt;code&gt;new_site()&lt;/code&gt; function&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are a couple different options to create the site but I believe the best one is using the &lt;code&gt;new_site()&lt;/code&gt; function. You can do this like so:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;blogdown::new_site(theme = &amp;quot;gcushen/hugo-academic&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An example site should now be previewed in the Viewer panel of Rstudio.&lt;/p&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Personalize the website&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I am not going to go over this because I am still learning how to do this myself. The main thing you should know is that you can edit the example site in any way you would like. You can change the title, fonts, color scheme, widgets used, etc. If you decide to use the Academic Theme look over the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;documentation&lt;/a&gt; . The author of the theme goes into great detail on how to get started and the different levels of customization you can do. The last thing I am going to touch base on is how to get your new site deployed to Netlify.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;deploy-in-netlify&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Deploy in Netlify&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/img/netlify.png&#34; /&gt; There are a number of ways to deploy your new website but I personally like Netlify. Netlify allows you to connect to your GitHub repo, add custom build settings, and deploy your website. The best part about Netlify is that it’s &lt;strong&gt;free&lt;/strong&gt; and extremely &lt;strong&gt;easy&lt;/strong&gt;.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;When you are ready to deploy, commit your changes and push to GitHub, then go online to &lt;a href=&#34;https://www.netlify.com/&#34; target=&#34;_blank&#34;&gt;Netlify&lt;/a&gt;. You can commit your changes and push to GitHub all in Rstudio. Use the top menu button.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;Tools-&amp;gt;Version Control-&amp;gt;Commit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will bring up a new window:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/version_control.png&#34; /&gt; You should see all your files there. Highlight all the files you want to commit and make sure they are set to staged. Add a commit message and then press commit. After you press commit a smaller window will pop up. Wait a couple seconds and let it do it’s thing. Once it’s done hit close. Lastly, click the push button. If you did this correctly the files will now be uploaded to your GitHub repo.&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Go to Netlify’s website and click on the sign up button and sign up using your existing GitHub account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Log in, and select: &lt;code&gt;New site from Git-&amp;gt; Continuous Deployment: GitHub&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Netlify will then allow you to select from your existing GitHub repositories. Pick the repo you’ve been with.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;final-thoughts&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Final Thoughts&lt;/h3&gt;
&lt;p&gt;As you can see, it isn’t as difficult as you may have thought to create your own website/blog. &lt;code&gt;Blogdown&lt;/code&gt; is a great resource to utilize. Like I mentioned in the beginning, this is a very &lt;strong&gt;basic&lt;/strong&gt; introduction into &lt;code&gt;blogdown&lt;/code&gt;. There is so much more you can do to your website to make it awesome! I hope this post has helped you in some way in getting your website going. If you have an comments, constructive critism, questions, etc. please let me know and contact me.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Analyzing the Diurnal Cycle of Precipitation in the NCEP Global Forecast System</title>
      <link>/project/ncep_project/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 -0400</pubDate>
      
      <guid>/project/ncep_project/</guid>
      <description>&lt;p&gt;Forecasting the diurnal cycle of precipitation over the continental United States (CONUS) is a problematic process for most global forecast systems. A majority tends to have a strong bias and they don’t provide a skilled prediction of the intensity, coverage and frequency of the diurnal cycle. Accurately forecasting the diurnal precipitation cycle, is closely related to the overall quality of the global forecast itself. Also, the accuracy of representation of physical processes in the models is indicative to the forecast skill. Major implementations have been made for the National Centers for Environmental Prediction (NCEP) operational Global Forecast System (GFS) throughout the years to make improvements to the diurnal cycle of precipitation. This study examines the diurnal cycle of precipitation over the CONUS during the winter and summer months of 2016-2017. The operational and experimental GFS will be analyzed and compared to the observed diurnal cycle of precipitation. To accomplish this, 3-hourly averaged accumulated precipitation vs. forecast hour plots, for the different models, were created. This allowed us to gain insight on how the skill of the models were performing, against the observations.&lt;/p&gt;

&lt;p&gt;This study is expected to provide feedback to the model developers at NCEP’s Environmental Modeling Center (EMC) to inform (for making further) priorities for improvements to the GFS model, especially with the newly selected Next Generation Global Prediction System (NGGPS) Finite Volume Cube Sphere (FV3) modeling system. The NGGPS is a fully coupled system that will be designed to create useful forecast guidance out to 30 days, extend forecast skill beyond 8 to 10 days, and improve hurricane track/intensity forecast.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Case Study Analysis of Easterly Wave Formation in the East Pacific</title>
      <link>/project/colorado_state_project/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 -0400</pubDate>
      
      <guid>/project/colorado_state_project/</guid>
      <description>&lt;p&gt;Easterly waves are weak troughs of low pressure that propagate westward across the Atlantic and East Pacific. These disturbances seed the majority of East Pacific and Atlantic tropical cyclones. Most easterly waves originate from Africa, although recent work indicates that they can also be locally generated in the East Pacific. This study analyzed the development and origins of the two precursor disturbances that eventually became Hurricanes Patricia and John in the East Pacific. Using TRMM precipitation and ERA-I reanalysis datasets, we investigate the local processes responsible for the organization of vorticity and precipitation in the initial disturbances from which these tropical cyclones formed. It is shown that although the easterly wave that formed Hurricane John originated from Africa, interactions with the Gulf of Papagayo jet influenced the intensification of the disturbance. The disturbance that formed Hurricane Patricia strengthened through complex interactions with the Gulf of Tehuantepec wind jet. Our results support the contention that both local and remote influences contribute to easterly wave formation in the East Pacific Ocean.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>US Census Bureau Shiny App</title>
      <link>/project/census_app/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 -0400</pubDate>
      
      <guid>/project/census_app/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Example Page</title>
      <link>/tutorial/example/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 -0400</pubDate>
      
      <guid>/tutorial/example/</guid>
      <description>

&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;

&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h2&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0500</pubDate>
      
      <guid>/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    
Click on the **Slides** button above to view the built-in slides feature.

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s &lt;em&gt;Slides&lt;/em&gt; feature and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-id/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 -0400</pubDate>
      
      <guid>/publication/person-re-id/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 -0400</pubDate>
      
      <guid>/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
